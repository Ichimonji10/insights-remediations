{{ if .Values.deploy.postgres }}
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    name: postgres
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    type: Recreate
  template:
    metadata:
      labels:
        name: postgres
    spec:
      containers:
      - env:
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: remediation-db
        image: "{{ .Values.imageRegistry }}/openshift/postgresql:10"
        imagePullPolicy: Always

        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5

        name: postgres
        ports:
        - containerPort: 5432
          protocol: TCP

        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
  triggers:
  - type: ImageChange
    imageChangeParams:
      containerNames:
      - postgres
      from:
        kind: ImageStreamTag
        name: postgresql:10
        namespace: openshift
  - type: ConfigChange

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  ports:
  - name: postgres
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    name: postgres
  type: ClusterIP
{{ end }}
