apiVersion: v1
kind: Template
metadata:
  name: remediations-dc

parameters:
- name: MIGRATION_CMD
  description: Command to use for db migration. In stable environments this should be "npm run db:create; npm run db:migrate"
  value: "npm run db:init && npm run db:migrate && npm run db:seed"

objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: remediations
    name: remediations
  spec:
    replicas: 1
    selector:
      app: remediations
      deploymentconfig: remediations
    strategy:
      type: Recreate
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - ${MIGRATION_CMD}
            containerName: remediations
          failurePolicy: Abort
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
        pre:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - ${MIGRATION_CMD}
            containerName: remediations
          failurePolicy: Abort
    template:
      metadata:
        labels:
          app: remediations
          deploymentconfig: remediations
      spec:
        containers:
        - image: remediations:latest
          imagePullPolicy: Always
          name: remediations
          ports:
          - containerPort: 9002
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /r/insights/platform/remediations/v1/health
              port: 9002
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 2
          env:
          - name: ADVISOR_IMPL
            value: impl
          - name: ADVISOR_HOST
            value: http://insights-advisor-api.advisor-ci.svc.cluster.local:8000
          - name: ADVISOR_AUTH
            valueFrom:
              secretKeyRef:
                key: password
                name: content-server
          - name: CONTENT_SERVER_HOST
            value: http://content-server.advisor-ci.svc.cluster.local:8080
          - name: VULNERABILITIES_IMPL
            value: mock
          - name: VULNERABILITIES_HOST
            value: http://insights-api.insights-ci.svc.cluster.local:9002
          - name: VULNERABILITIES_AUTH
            valueFrom:
              secretKeyRef:
                key: password
                name: content-server
          - name: COMPLIANCE_IMPL
            value: impl
          - name: COMPLIANCE_HOST
            value: http://compliance-backend.compliance-ci.svc.cluster.local:3000
          - name: SSG_IMPL
            value: impl
          - name: SSG_HOST
            value: http://playbooks-cac:8080
          - name: INVENTORY_IMPL
            value: impl
          - name: INVENTORY_HOST
            value: http://insights-inventory.platform-ci.svc.cluster.local:8080
          - name: USERS_IMPL
            value: impl
          - name: USERS_HOST
            value: https://insights-services-pipeline-insights.ext.paas.redhat.com
          - name: USERS_INSECURE
            value: "true"
          - name: USERS_AUTH
            valueFrom:
              secretKeyRef:
                key: token
                name: backoffice
          - name: LOG_LEVEL
            value: trace
          - name: REDIS_ENABLED
            value: "true"
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PORT
            value: "6379"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: redis
          - name: DB_HOST
            value: postgres
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: db
          - name: DEMO_MODE
            value: "false"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange


