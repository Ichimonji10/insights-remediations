// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generates a rule-based playbook (advisor) 1`] = `
"---
- name: Correct Bonding Config Items
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: true
  vars:
    pydata: \\"{{ insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] }}\\"
  tasks:

    - when: 
        - insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] is defined
        - item.value == 2
      name: Add quotes around bonding options
      lineinfile:
        dest: \\"/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}\\"
        regexp: '(^\\\\s*BONDING_OPTS=)(.*)'
        backrefs: yes
        line: '\\\\1\\"\\\\2\\"'
      with_dict: \\"{{ pydata.interface_issue_dict }}\\"

    - when:
        - insights_report.details['bond_config_issue|BOND_CONFIG_ISSUE'] is defined
        - item.value == 1
      name: lowercase yes in Slave option
      lineinfile:
        dest: \\"/etc/sysconfig/network-scripts/ifcfg-{{ item.key }}\\"
        regexp: '(^\\\\s*SLAVE=)(\\"*YES\\"*)'
        backrefs: yes
        line: '\\\\1yes'
      with_dict: \\"{{ pydata.interface_issue_dict }}\\"


- name: run insights
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: redhat-access-insights
      changed_when: false"
`;

exports[`generates a rule-based playbook (vulnerabilities) 1`] = `
"---
- name: Update system to the latest kernel and reboot
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: true
  vars:
    # determine if we need to update the 'kernel' package or 'kernel-rt' package
    kernel_pkg: \\"{{'kernel-rt' if 'rt' in ansible_kernel else 'kernel'}}\\"

  tasks:
    - name: Update kernel
      yum:
        name: \\"{{kernel_pkg}}\\"
        state: latest
      register: yum

    - when: yum|changed
      name: set reboot fact
      set_fact:
        insights_needs_reboot: True

    - when: not yum|changed
      # The latest kernel is already installed so boot from it.  Sort the installed kernels
      # by buildtime and select the one with the most recent build time
      block:
      - name: get latest installed {{kernel_pkg}} package version
        shell: rpm -q {{kernel_pkg}} --queryformat=\\"%{buildtime}\\\\t%{version}-%{release}.%{arch}\\\\n\\" | sort -nr | head -1 | cut -f2
        register: latest_kernel
        check_mode: no

      - name: get configured default kernel
        command: /sbin/grubby --default-kernel
        register: default_kernel
        check_mode: no

      - when: default_kernel.stdout.split('-', 1)[1] != latest_kernel.stdout
        name: set the default kernel to the latest installed
        command: /sbin/grubby --set-default /boot/vmlinuz-{{latest_kernel.stdout}}
        register: grub_change
        check_mode: no

      - when: grub_change|changed
        name: set reboot fact
        set_fact:
          insights_needs_reboot: True


# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: True
  gather_facts: False
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now \\"Ansible triggered reboot\\"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: \\"{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}\\"
            port: \\"{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}\\"
            delay: 15
            timeout: 300
          become: false

- name: run insights
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: redhat-access-insights
      changed_when: false"
`;

exports[`generates a simple playbook 1`] = `
"---
- name: ping
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  tasks:
    - ping

- name: run insights
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: redhat-access-insights
      changed_when: false"
`;

exports[`generates a simple playbook with reboot 1`] = `
"---
- name: Trigger reboot
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com,d36ef48c-8f05-11e8-9eb6-529269fb1459-system\\"

  tasks:
    - name: Trigger reboot
      set_fact:
        insights_needs_reboot: True

# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com,d36ef48c-8f05-11e8-9eb6-529269fb1459-system\\"
  become: True
  gather_facts: False
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now \\"Ansible triggered reboot\\"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: \\"{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}\\"
            port: \\"{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}\\"
            delay: 15
            timeout: 300
          become: false

- name: run insights
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com,d36ef48c-8f05-11e8-9eb6-529269fb1459-system\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: redhat-access-insights
      changed_when: false"
`;

exports[`generates an erratum-based playbook 1`] = `
"---
- name: fix RHSA-2018:0502
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: true
  vars:
    changed_keyword: \\"Complete!\\"
  tasks:
    - name: upgrade package
      shell: yum update -d 2 -y --advisories=RHSA-2018:0502
      register: yum_result
      changed_when: changed_keyword in yum_result.stdout

    - when: changed_keyword in yum_result.stdout
      name: set reboot fact
      set_fact:
        insights_needs_reboot: True

# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: True
  gather_facts: False
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now \\"Ansible triggered reboot\\"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: \\"{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}\\"
            port: \\"{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}\\"
            delay: 15
            timeout: 300
          become: false

- name: run insights
  hosts: \\"a8799a02-8be9-11e8-9eb6-529269fb1459.example.com\\"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: redhat-access-insights
      changed_when: false"
`;
