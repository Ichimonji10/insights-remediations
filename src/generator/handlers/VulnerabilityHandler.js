'use strict';

const P = require('bluebird');
const ErratumPlay = require('../ErratumPlay');
const ResolutionPlay = require('../ResolutionPlay');
const vulnerabilities = require('../../connectors/vulnerabilities');
const disambiguator = require('../../resolutions/disambiguator');
const erratumResolver = require('../../resolutions/resolvers/erratumResolver');
const contentServerResolver = require('../../resolutions/resolvers/contentServerResolver');

const VMAAS_PATTERN = /^RH[SBE]A-20[\d]{2}:[\d]{4,5}$/;

exports.application = 'vulnerabilities';

exports.createPlay = function (issue) {
    if (VMAAS_PATTERN.test(issue.id.issue)) {
        return handleErratumBased(issue);
    }

    return handleRuleBasedIssue(issue);
};

async function handleErratumBased ({id, hosts}) {
    const resolution = await erratumResolver.resolveResolution(id);

    if (!resolution) {
        return;
    }

    const description = `${resolution.erratum.synopsis} (${id.issue})`;
    return new ErratumPlay(id, hosts, resolution, description);
}

async function handleRuleBasedIssue ({id, hosts, resolution}) {
    const [resolutions, rule] = await P.all([
        contentServerResolver.resolveResolutions(id),
        vulnerabilities.getRule(id.issue)
    ]);

    if (!resolutions.length || !rule) {
        return;
    }

    const disambiguatedResolution = disambiguator.disambiguate(resolutions, resolution, id);
    return new ResolutionPlay(id, hosts, disambiguatedResolution, rule.description);
}
